FROM ubuntu:18.04
RUN apt-get -q update -y
RUN apt-get -qq install -y make cmake automake autoconf libtool cmake-data git g++ gfortran flex doxygen graphviz pandoc libpmi0-dev libpmi2-0-dev python2.7 python-pip texlive-font-utils clang llvm ccache texlive-latex-base texlive-fonts-recommended texlive-latex-recommended libboost-dev libboost-program-options-dev gdb wget curl lcov
RUN wget -O /usr/bin/doxy-coverage https://raw.githubusercontent.com/alobbs/doxy-coverage/master/doxy-coverage.py
RUN chmod +x /usr/bin/doxy-coverage

# Compile OpenMPI. We need PMI support (pmi2 and/or pmix) for charliecloud to work
#   1. --disable-pty-support to avoid "pipe function call failed when
#      setting up I/O forwarding subsystem".
#
#   2. --with-slurm=no so mpirun in the container doesn't try use Slurm to
#       launch processes, which will fail in inscrutable ways e.g. if srun is
#       not found. (If you do want Slurm launching processes, use srun or
#       mpirun outside the container.)
#
ENV MPI_URL https://www.open-mpi.org/software/ompi/v2.1/downloads
ENV MPI_VERSION 2.1.2
WORKDIR /usr/src
RUN wget -nv ${MPI_URL}/openmpi-${MPI_VERSION}.tar.gz
RUN tar xf openmpi-${MPI_VERSION}.tar.gz
RUN    cd openmpi-${MPI_VERSION} \
    && CFLAGS=-O3 \
       CXXFLAGS=-O3 \
       ./configure --prefix=/usr \
                   --sysconfdir=/mnt/0 \
                   --disable-pty-support \
                   --with-pmi \
                   --with-pmi-libdir=/usr/lib/x86_64-linux-gnu \
                   --with-pmix \
                   --with-slurm=no \
    && make -j$(getconf _NPROCESSORS_ONLN) install
RUN rm -Rf openmpi-${MPI_VERSION}*

RUN apt-get install -y openjdk-8-jdk unzip
RUN wget https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-2.8.zip https://sonarqube.com/static/cpp/build-wrapper-linux-x86.zip
RUN unzip sonar-scanner-2.8.zip -d /sonarqube/
RUN unzip build-wrapper-linux-x86.zip -d /sonarqube/
ENV PATH=${PATH}${PATH:+:}/sonarqube/build-wrapper-linux-x86:/sonarqube/sonar-scanner-2.8/bin
RUN sonar-scanner -h

RUN groupadd -r flecsi
RUN useradd -r -m -g flecsi flecsi
USER flecsi
ENV PATH=/usr/lib/ccache:${PATH}
ENV OPENMPI=true
WORKDIR /home/flecsi
RUN pip install --user codecov coverxygen
